openapi: 3.0.0
info:
  title: Chat Application API
  description: A RESTful API for a chat application
  version: 1.0.0
  
servers:
  - url: http://localhost:8080
    description: Local development server
    
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
        username:
          type: string
          description: Username for the user
        created_at:
          type: string
          format: date-time
          description: Timestamp when the user was created
    Group:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the group
        name:
          type: string
          description: Name of the group
        created_by:
          type: string
          format: uuid
          description: User ID of the group creator
        created_at:
          type: string
          format: date-time
          description: Timestamp when the group was created
    Message:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the message
        user_id:
          type: string
          format: uuid
          description: User ID of the message sender
        group_id:
          type: integer
          description: Group ID where the message was sent
        content:
          type: string
          description: Content of the message
        created_at:
          type: string
          format: date-time
          description: Timestamp when the message was created

paths:
  /users:
    post:
      summary: Create a new user
      description: Create a new user with a unique username
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid request
        409:
          description: Username already taken
          
  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
          
  /groups:
    post:
      summary: Create a new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - user_id
              properties:
                name:
                  type: string
                user_id:
                  type: string
                  format: uuid
      responses:
        201:
          description: Group created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        400:
          description: Invalid request
        404:
          description: User not found
        409:
          description: Group name already taken
    
    get:
      summary: Get all groups
      responses:
        200:
          description: List of all groups
          content:
            application/json:
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
                    
  /groups/{id}/join:
    post:
      summary: Join a group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: string
                  format: uuid
      responses:
        200:
          description: User joined the group successfully
        400:
          description: Invalid request
        403:
          description: Permission denied
        404:
          description: Group or user not found
          
  /messages:
    post:
      summary: Send a message to a group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - group_id
                - content
              properties:
                user_id:
                  type: string
                  format: uuid
                group_id:
                  type: integer
                content:
                  type: string
      responses:
        201:
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        400:
          description: Invalid request
        403:
          description: User is not a member of the group
        404:
          description: User or group not found
          
  /groups/{id}/messages:
    get:
      summary: Get messages from a group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: user_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: List of messages in the group
          content:
            application/json:
              schema:
                type: object
                properties:
                  group_id:
                    type: integer
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        content:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            username:
                              type: string
        400:
          description: Invalid request
        403:
          description: User is not a member of the group
        404:
          description: Group not found